## **创建用户认证授权的 kubeconfig 文件**

**1、创建 CA (Certificate Authority)**

```shell
root@master.tc1.com:[/etc/kubernetes/pki]cat >> ca-config.json << EOF
> {
>   "signing": {
>     "default": {
>       "expiry": "87600h"
>     },
>     "profiles": {
>       "kubernetes": {
>         "usages": [
>             "signing",
>             "key encipherment",
>             "server auth",
>             "client auth"
>         ],
>         "expiry": "87600h"
>       }
>     }
>   }
> }
> EOF
```

**2、创建 CA 证书和秘钥**

```shell
#创建 devuser-csr.json 文件
root@master.tc1.com:[/etc/kubernetes/pki]cat >> devuser-csr.json << EOF
> {
>   "CN": "devuser",
>   "hosts": [],
>   "key": {
>     "algo": "rsa",
>     "size": 2048
>   },
>   "names": [
>     {
>       "C": "CN",
>       "ST": "BeiJing",
>       "L": "BeiJing",
>       "O": "k8s",
>       "OU": "System"
>     }
>   ]
> }
> EOF

#生成 CA 证书和私钥，进入生成的证书和秘钥所在目录，确保该目录下已经包含如下文件：
ca-key.pem  ca.pem ca-config.json  devuser-csr.json

root@master.tc1.com:[/root]cd /etc/kubernetes/pki
root@master.tc1.com:[/etc/kubernetes/pki]ls
...
-rw-r----- 1 root  292 2月   7 10:24 ca-config.json
-rw------- 1 root 1679 11月 17 16:17 ca-key.pem
-rw-r--r-- 1 root 1298 11月 17 16:17 ca.pem
-rw-r----- 1 root  997 2月   7 10:41 devuser.csr
-rw-r----- 1 root  220 2月   7 10:28 devuser-csr.json
...
root@master.tc1.com:[/etc/kubernetes/pki]cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes devuser-csr.json | cfssljson -bare devuser
2022/2/07 11:03:05 [INFO] generate received request
2022/2/07 11:03:05 [INFO] received CSR
2022/2/07 11:03:05 [INFO] generating key: rsa-2048
2022/2/07 11:03:05 [INFO] encoded CSR
2022/2/07 11:03:05 [INFO] signed certificate with serial number 132074231314178183485733439067866457186570148160
2022/2/07 11:03:05 [WARNING] This certificate lacks a "hosts" field. This makes it unsuitable for
websites. For more information see the Baseline Requirements for the Issuance and Management
of Publicly-Trusted Certificates, v.1.1.6, from the CA/Browser Forum (https://cabforum.org);
specifically, section 10.2.3 ("Information Requirements").
#生成如下文件：
devuser.csr  devuser-key.pem  devuser.pem
root@master.tc1.com:[/etc/kubernetes/pki]ls
总用量 72
drwxr-xr-x 2 root 4096 2月   7 11:07 .
drwxr-xr-x 5 root  176 11月 17 14:21 ..
-rw------- 1 root 1679 11月 17 16:17 admin-key.pem
-rw-r--r-- 1 root 1387 11月 17 16:17 admin.pem
-rw------- 1 root 1679 11月 17 16:17 apiserver-key.pem
-rw-r--r-- 1 root 1639 11月 17 16:17 apiserver.pem
-rw-r----- 1 root  292 2月   7 10:24 ca-config.json
-rw------- 1 root 1679 11月 17 16:17 ca-key.pem
-rw-r--r-- 1 root 1298 11月 17 16:17 ca.pem
-rw-r----- 1 root  997 2月   7 10:41 devuser.csr
-rw-r----- 1 root  220 2月   7 10:28 devuser-csr.json
-rw------- 1 root 1675 2月   7 10:41 devuser-key.pem
-rw-r----- 1 root 1379 2月   7 10:41 devuser.pem
-rw------- 1 root 1679 11月 17 16:17 kubelet-client-key.pem
-rw-r--r-- 1 root 1407 11月 17 16:17 kubelet-client.pem
-rw------- 1 root 1679 11月 17 16:17 kubelet-server-key.pem
-rw-r--r-- 1 root 1448 11月 17 16:17 kubelet-server.pem
-rw------- 1 root 1675 11月 17 16:17 node-key.pem
-rw-r--r-- 1 root 1448 11月 17 16:17 node.pem
```

**3、创建 kubeconfig 文件**

```shell
# 设置集群参数
root@master.tc1.com:[/etc/kubernetes/pki]export KUBE_APISERVER="https://master节点IP:6443"
root@master.tc1.com:[/etc/kubernetes/pki]kubectl config set-cluster kubernetes --certificate-authority=/etc/kubernetes/pki/ca.pem --embed-certs=true --server=${KUBE_APISERVER} --kubeconfig=devuser.kubeconfig
Cluster "kubernetes" set.

# 设置客户端认证参数
root@master.tc1.com:[/etc/kubernetes/pki]kubectl config set-credentials devuser --client-certificate=/etc/kubernetes/pki/devuser.pem --client-key=/etc/kubernetes/pki/devuser-key.pem --embed-certs=true --kubeconfig=devuser.kubeconfig
User "devuser" set.

# 设置上下文参数
root@master.tc1.com:[/etc/kubernetes/pki]kubectl config set-context kubernetes --cluster=kubernetes --user=devuser --namespace=demo --kubeconfig=devuser.kubeconfig
Context "kubernetes" created.

# 设置默认上下文
root@master.tc1.com:[/etc/kubernetes/pki]kubectl config use-context kubernetes --kubeconfig=devuser.kubeconfig
Switched to context "kubernetes".
```

**4、查看 kubectl 的 context**

```
root@master.tc1.com:[/etc/kubernetes/pki]kubectl config get-contexts --kubeconfig=devuser.kubeconfig
CURRENT   NAME         CLUSTER      AUTHINFO   NAMESPACE
*         kubernetes   kubernetes   devuser    demo
```

**5、测试**

```shell
root@master.tc1.com:[/etc/kubernetes/pki]kubectl get ns --kubeconfig=devuser.kubeconfig
Error from server (Forbidden): namespaces is forbidden: User "devuser" cannot list resource "namespaces" in API group "" at the cluster scope

root@master.tc1.com:[/etc/kubernetes/pki]kubectl get pods -n demo --kubeconfig=devuser.kubeconfig
Error from server (Forbidden): pods is forbidden: User "devuser" cannot list resource "pods" in API group "" in the namespace "demo"
```

**6、使用 RBAC创建角色绑定授权**

```shell
root@master.tc1.com:[/etc/kubernetes/pki]kubectl create rolebinding devuser-admin-binding --clusterrole=admin --user=devuser --namespace=demo
rolebinding.rbac.authorization.k8s.io/devuser-admin-binding created
```

**7、再次测试**

```shell
#不能查看所有
root@master.tc1.com:[/etc/kubernetes/pki]kubectl get ns --kubeconfig=devuser.kubeconfig
Error from server (Forbidden): namespaces is forbidden: User "devuser" cannot list resource "namespaces" in API group "" at the cluster scope
root@master.tc1.com:[/etc/kubernetes/pki]
#仅能查看demo下的资源
root@master.tc1.com:[/etc/kubernetes/pki]kubectl get pods -n demo --kubeconfig=devuser.kubeconfig
NAME                                                    READY   STATUS                       RESTARTS   AGE
...
sunlogin-console-6789546465-wv7kg                       1/1     Running                      5          117d
sunlogin-console-api-84b69c6695-cc7zx                   1/1     Running                      4          82d
v11111-v1-69b6fc5f65-d4mhz                              1/1     Running                      3          115d
v2222222222222-v2-9d5859fd7-kxs2d                       1/1     Running                      4          61d
...
root@master.tc1.com:[/etc/kubernetes/pki]
```

